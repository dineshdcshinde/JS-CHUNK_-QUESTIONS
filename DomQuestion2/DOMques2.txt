1.	Write a function to select all elements with the class card inside a <div> with the ID container and log their text content.
answer- 
	function selectAllCards (){
    let container = document.querySelector("#container")
	let cards= container.querySelectorAll(".card")  
		cards.forEach((card)=>{
			console.log(card.textContent)
		})
	}
	selectAllCards()


	2.	Write code to select the last <li> element in a <ul> with the class menu.
	answer- 
	const menu = document.querySelector(".menu")
	const lastElement = menu.lastElementChild
	console.log(lastElement.textContent)

	3.	Traverse through all child elements of a <div> with the ID parent and log each child’s tag name.
	answer- 
	let parent = document.querySelector("#parent");
	let tagNames = [...parent.querySelectorAll("div")];
	tagNames.forEach((tagName) => {
	console.log(tagName.tagName);
	});

	4.	Select all <input> elements inside a <form> and change their placeholder text to "Enter value".
	answer- 
	let form = document.querySelector("form");
	let inputs = form.querySelectorAll("input");
	inputs.forEach((input) => {
	input.placeholder = "Enter value";
	});

	5.	Write a function to find and log the parent element of an element with the class child-item.
	answer-
	function getParent (){
		let child = document.querySelector(".child-item")
	console.log(child.parentElement)

	}
	getParent();

	6.	Select all <p> elements and append " - Updated" to their current text.
	answer-
	let paragraphs = document.querySelectorAll("p");

	paragraphs.forEach((para) => {
	para.textContent += " - Updated";
	});

	7.	Write a function that replaces the content of an element with ID quote with a <blockquote> containing a new quote.
	answer-
	function addBlockQuote(){
    const quote = document.querySelector("#quote")
    quote.innerHTML = `<blockquote>I am with the help of the blockQuote tag</blockquote>`
	}
	addBlockQuote()


	8.	Update the text of all <h2> elements, adding their index (e.g., "Heading 1", "Heading 2", etc.).
	answer-
	let headings = [...document.querySelectorAll("h2")]

	headings.forEach((heading, index)=>{
		heading.textContent = `heading ${index+1}`
	})

	9.	Write a function to dynamically update the content of a <div> based on data received from an object.
	answer-
	let infoObj = {
	title: "Demo",
	info: "Hi, i am about something important work",
	};

	function updateInfo() {
	let card = document.querySelector(".card");
	if (card) {
		let title = card.querySelector("h3");
		title.textContent = `Title: ${infoObj.title}`;

		let info = card.querySelector("p");
		info.textContent = `Info: ${infoObj.info}`;
	}
	}
	updateInfo();
 
	10.	Create a function that wraps the text of all <span> elements with <strong> tags.
	answer-
	function wrapStrongTag() {
	let spanTags = [...document.querySelectorAll("span")];

	spanTags.forEach((span) => {
		let strongTag = document.createElement("strong");
		strongTag.textContent = span.textContent;
		span.textContent = "";
		span.appendChild(strongTag);
	});
	}
	wrapStrongTag();

	11.	Write code to toggle the display property between none and block for a <div> with the class toggle-box.
	answer-
	let toggleBtn = document.querySelector("button");
	let toggleBox = document.querySelector(".toggle-box");

	toggleBtn.addEventListener("click", () => {
	toggleBox.style.display === "block"
		? (toggleBox.style.display = "none")
		: (toggleBox.style.display = "block");
	});

	12.	Select all <button> elements with the class primary and change their background color to a gradient.
	answer- 
	const btns = [...document.querySelectorAll(".primary")];
	btns.forEach((btn) => {
	btn.style.background =
		"linear-gradient(to right, rgba(255, 0,0,0), rgba(255, 0, 0, 1))";
	});	

	13.	Write a function that applies inline styles to an element dynamically based on user input (e.g., font size, color).
	answer- 
	const fontSize = document.querySelector("#fontSize");
	const color = document.querySelector("#color");
	const changeText = document.querySelector("#change");

	fontSize.addEventListener("input", () => {
	let fontSizeValue = Number(fontSize.value);
	changeText.style.fontSize = `${fontSizeValue}px`;
	});

	color.addEventListener("input", () => {
	changeText.style.color = color.value;
	});

	14.	Add a shadow to all <img> elements when the page loads.
	answer- 
	const images = [...document.querySelectorAll("img")]

	images.forEach((img)=>{
		img.style.boxShadow = "5px 10px #888888"
	})

	15.	Select a <div> with the class highlighted and add CSS animations to it.
	answer- 
	const highlighted = document.querySelector(".highlighted")

	highlighted.classList.add("spinning")
	console.log(highlighted)

	16.	Write a function that adds a click event listener to all <li> elements inside a <ul> and logs the text 	content of the clicked item.
	answer- 
	const printName = () => {
	const elements = [...document.querySelectorAll("li")];
	elements.forEach((ele) => {
		ele.addEventListener("click", () => {
		console.log(ele.textContent);
		});
	});
	};
	printName();


	17.	Add a mouseover event listener to a <button> that changes its text color when hovered and reverts when not.
	answer- 

	const btn  = document.querySelector("button")

	btn.addEventListener("mouseover", ()=>{
		btn.style.color = "red"
		btn.textContent = "mouse over"
	})

	btn.addEventListener("mouseout", ()=>{
		btn.style.color = "black"
		btn.textContent = "Click Me"
	})

	18.	Write a function to listen for a change event on a <select> dropdown and log the selected value.
	answer- 
	function printSelectValue() {
	const select = document.querySelector("#select");

	select.addEventListener("change", () => {
		console.log(select.value);
	});
	}
	printSelectValue();

	19.	Create an event listener that listens for double clicks (dblclick) on a <div> and changes its background color.
	answer- 
	const card = document.querySelector('.card');
	card.addEventListener("dblclick", ()=>{
		card.style.backgroundColor = "red"
	})

	20.	Add a global keypress event listener that logs the pressed key and its keycode to the console.
	answer- 
	window.addEventListener("keypress", (event) => {
	console.log("keyCode:", event.keyCode);
	console.log("Key", event.key);
	});

	21.	Write code to add the class completed to every <li> element that contains the text "done".
	answer- 
	const liElements = [...document.querySelectorAll("li")];

	liElements.forEach((ele) => {
	if (ele.textContent == "done") {
		ele.classList.add("completed");
	}
	});

	22.	Write a function to toggle a class active on an element every time it’s clicked.
	answer- 
	const btn = document.querySelector("button");
	btn.addEventListener("click", ()=>{
		btn.classList.toggle("active")
	})

	23.	Add a new data-id attribute to each <li> element in an ordered list, setting its value to the index of the element.
	answer- 
	const orderList = document.querySelector("ol");

	const elements = [...orderList.querySelectorAll("li")];

	elements.forEach((ele, i) => {
	ele.setAttribute("data-id", `${i + 1}`);
	});

	24.	Write code to remove the disabled attribute from all <input> fields with the class editable.
	answer- 
	const editable = document.querySelectorAll("input");
	editable.forEach((ele) => {
	ele.removeAttribute("disabled");
	});

	25.	Write a function that checks whether an element has a specific class and logs the result.
	answer- 
	function isClass(classd, specificClass) {
	const searchingClass = document.querySelector(`.${classd}`);
	let output = searchingClass.classList.contains(`${specificClass}`);
	return output ? "Present" : "NotPresent"
	}
	isClass("container", "abc");

	26.	Create a <div> dynamically with the class modal, some inner content, and append it to the <body>.
	answer- 
	const modal = document.createElement('div');
	modal.classList.add("modal")
	const para = document.createElement("p")
	para.innerText = "I am inside a modal container"
	modal.appendChild(para)
	document.body.appendChild(modal)

	27.	Write a function that generates a <ul> from an array of strings, appending each string as an <li>.
	answer- 
	const arrElements = ["mango", "orange", "pomegranate", "apple"];
	const appendLiElements = () => {
	const unorderList = document.createElement("ul");
	const elements = arrElements.forEach((ele, i) => {
		let li = document.createElement("li");
		li.innerText = `${ele}`;
		li.setAttribute("id", `${i} `);
		ul.appendChild(li);
	});
	document.body.appendChild(unorderList);
	};

	28.	Dynamically create and append a table with 3 rows and 2 columns to a <div> with the ID table-container.
	answer- 





	29.	Write code to create a form with two <input> fields and a <button> and append it to the <body>.
	answer- 
	const form = document.createElement("form");
	const name = document.createElement("input");
	name.placeholder = "Enter your name";
	const pass = document.createElement("input");
	pass.placeholder = "Enter your pass";
	const submit = document.createElement("Button");
	submit.textContent = "Submit";
	form.appendChild(name);
	form.appendChild(pass);
	form.appendChild(submit);
	document.body.appendChild(form);

	30.	Create a function that appends 10 numbered <button> elements to a <div> and adds a click event listener to each button.
	31.	Write code to add the class red-border to all <img> elements except those with the class no-border.
	answer- 
	const redBorderedImages = document.querySelectorAll(".red-border");

	redBorderedImages.forEach((img) => {
	img.style.border = "2px solid red";
	});

	32.	Select all <p> elements inside a <div> and prepend "Note: " to their text content.
	answer- 
	const paras = [...document.querySelectorAll(".container p")]

	paras.forEach((para)=>{
		para.prepend("note: ")
	})

	33.	Write a function that removes all child elements from a <div> with the class clear-me.
	answer- 
	function removeChild(removeClass) {
	const removeChildClass = document.querySelectorAll(`.${removeClass}`);

	removeChildClass.forEach((ele) => {
		ele.parentElement.removeChild(ele);
	});
	}
	removeChild("clear-me");

	34.	Add a click event listener to all <a> elements with the class external that prevents their default behavior.
	answer- 

	const exteranl = document.querySelectorAll(".external");

	exteranl.forEach((ele) => {
	ele.addEventListener("click", (e) => {
		e.preventDefault();
		console.log("I will not navigate");
	});
	});

	35.	Write code to duplicate all <li> elements in an unordered list and append the duplicates to the same list.
	answer- 
	const unorderList = document.querySelector("ul")
	const listElements = [...unorderList.querySelectorAll("li")]

	listElements.forEach((ele)=>{
		const duplicateElemets = ele.cloneNode(true)
		unorderList.appendChild(duplicateElemets)
	})

	36.	Write a function to validate an email input field and display an error message if the email is invalid.
	answer- 
	const email = document.querySelector("input");
	const formSubmit = document.querySelector("#formSumbit");

	let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

	function validateEmail() {}

	formSubmit.addEventListener("submit", (e) => {
	e.preventDefault();
	let emailValue = email.value;

	const existingError = document.querySelector("small");
	if (existingError) {
		existingError.parentNode.removeChild(existingError);
	}

	if (!emailValue) {
		alert("Please enter an email address");
		return;
	} else if (emailRegex.test(emailValue)) {
		alert("email valid!");
		console.log(emailValue);
		formSubmit.reset();
	} else {
		const errorMessage = document.createElement("small");
		errorMessage.innerText = "Invalid email address";
		errorMessage.style.color = "red";
		email.parentNode.appendChild(errorMessage);
		formSubmit.reset();
	}
	});

	37.	Add a submit event listener to a form that logs the form data as an object when submitted.
	answer- 
	const formSubmit = document.querySelector("#formSubmit");
	const nameInput = document.querySelector("#name");
	const emailInput = document.querySelector("#email");
	const submitBtn = document.querySelector("#submitbtn");

	const formData = {};

	formSubmit.addEventListener("submit", (e) => {
	e.preventDefault();

	let nameValue = nameInput.value.trim();
	let emailValue = emailInput.value.trim();

	formData.name = nameValue;
	formData.email = emailValue;
	console.log(formData);

	console.log("form submit");
	});
	
	38.	Write code to clear all form fields when a reset button is clicked.
	answer-
	const form = document.querySelector("form");
	const email = document.querySelector("#email");
	const password = document.querySelector("#password");
	const reset = document.querySelector("#reset");

	let formData = {};

	form.addEventListener("submit", (e) => {
	e.preventDefault();
	formData.email = email.value;
	formData.password = password.value;

	console.log(formData);
	});

	reset.addEventListener("click", () => {
	email.value = "";
	password.value = "";
	});

	39.	Create a function that dynamically adds a new <input> field when a button is clicked.
	answer-
	const btn = document.querySelector("button");

	const addInputField = () => {
	const input = document.createElement("input");
	input.type = "text";
	input.placeholder = "Enter something that you want ...";
	document.body.appendChild(input);
	};

	btn.addEventListener("click", addInputField);

	40.	Write a function to disable a form’s submit button until all required fields are filled.
	answer-

		







	41.	Build a function to create a dynamic pagination system with numbered buttons.
	42.	Write code to implement a “like” button that toggles between liked and unliked states on click.
	43.	Create a to-do list app where items can be added, marked as completed, and removed.
	44.	Write a function to filter a list of items based on a search input field.
	45.	Build a function that dynamically changes the theme of the webpage (e.g., dark mode and light mode).
	46.	Write a function to fetch data from an API and display it as a list inside a <div>.
	47.	Build a collapsible accordion where clicking on a section header toggles the visibility of its content.
	48.	Write a function that highlights the active section in the navigation bar as the user scrolls.
	49.	Implement an image carousel with next/previous buttons to navigate through the images.
	50.	Create a real-time character counter that updates as the user types in a <textarea>.